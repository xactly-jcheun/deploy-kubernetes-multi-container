# Language setting http://docs.shippable.com/ci/languages/node/
language: node_js

# use this to control what branches get built.
# http://docs.shippable.com/ci/advancedOptions/branches/
branches:
  only:
    - master

# using pre-defined build variables
# full list http://docs.shippable.com/ci/advancedOptions/environmentVariables/
env:
  global:
    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/
    - DOCKER_REPO=shippable
    - DOCKER_ACC=jcheun # {account name}

build:

  # http://docs.shippable.com/ci/shippableyml/#ci
  ci:
    # npm mirrors can sometimes be flacky, better to use shippable_retry
    # http://docs.shippable.com/ci/advancedOptions/retry/
    - shippable_retry npm install
    - mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR
    - pushd $TESTS_LOC_DIR
    - $MOD_LOC/mocha --recursive "$TESTS_LOC_DIR/**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=$TEST_RESULTS_DIR/testresults.xml
    - $MOD_LOC/istanbul --include-all-sources cover -root "$SHIPPABLE_REPO_DIR/routes" $SHIPPABLE_REPO_DIR/node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "$TESTS_LOC_DIR/**/*.spec.js"
    - $MOD_LOC/istanbul report cobertura --dir $CODE_COVERAGE_DIR
    - popd

  # http://docs.shippable.com/ci/shippableyml/#post_ci
  post_ci:
    - docker build -t $DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER .
    - docker push $DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER

# Integrations are used to connect external resources to CI
# http://docs.shippable.com/integrations/overview/
integrations:
  # adding docker hub integration so that credentials are available to CI Job
  # http://docs.shippable.com/platform/integration/dockerRegistryLogin/
  hub:
    - integrationName: drship_dockerhub
      type: dockerRegistryLogin

resources:
  - name: deploy-kubernetes-multi-container-image
    type: image
    integration: drship_dockerhub    #replace with your Docker Hub integration name
    pointer:
      sourceName: "docker.io/devopsrecipes/deploy-kubernetes-multi-container"  #replace with your image name on Docker Hub
      isPull: false
    seed:
      versionName: "master.5"  #replace with your image tag on Docker Hub
    flags:
      - deploy-kubernetes-multi-container

  - name: deploy-kubernetes-multi-container-nginx-image
    type: image
    integration: dr-ecr
    pointer:
      sourceName: "679404489841.dkr.ecr.us-east-1.amazonaws.com/nginx"
    seed:
      versionName: "1.12.0"
    flags:
      - deploy-kubernetes-multi-container

#kubernetes cluster
  - name: mc-kube-cluster
    type: cluster
    integration: us-west1    #replace with your Kubernetes integration name
    flags:
      - deploy-kubernetes-multi-container

jobs:

  ###################################
  # runCI job to update the image tag
  ###################################
  - name: deploy-kubernetes-multi-container_runCI
    type: runCI
    flags:
      - deploy-kubernetes-multi-container
    steps:
      - OUT: deploy-kubernetes-multi-container-image

  ######################################
  # Two images, one manifest, one deploy
  ######################################

  - name: deploy-kubernetes-multi-container-manifest-1
    type: manifest
    flags:
      - deploy-kubernetes-multi-container
    steps:
     - IN: deploy-kubernetes-multi-container-image
     - IN: deploy-kubernetes-multi-container-nginx-image

  - name: dkmc-deploy-1
    type: deploy
    flags:
      - deploy-kubernetes-multi-container
    steps:
      - IN: deploy-kubernetes-multi-container-manifest-1
      - IN: mc-kube-cluster


  ########################################
  # Two images, two manifests, one deploy
  ########################################

  - name: deploy-kubernetes-multi-container-manifest-2a
    type: manifest
    flags:
      - deploy-kubernetes-multi-container
    steps:
     - IN: deploy-kubernetes-multi-container-image

  - name: deploy-kubernetes-multi-container-manifest-2b
    type: manifest
    flags:
      - deploy-kubernetes-multi-container
    steps:
      - IN: deploy-kubernetes-multi-container-nginx-image

  - name: dkmc-deploy-2
    type: deploy
    workflow: parallel
    flags:
      - deploy-kubernetes-multi-container
    steps:
      - IN: deploy-kubernetes-multi-container-manifest-2a
      - IN: deploy-kubernetes-multi-container-manifest-2b
      - IN: mc-kube-cluster

  ########################################
  # Two images, two manifests, two deploys
  ########################################

  - name: deploy-kubernetes-multi-container-manifest-3a
    type: manifest
    flags:
      - deploy-kubernetes-multi-container
    steps:
     - IN: deploy-kubernetes-multi-container-image

  - name: deploy-kubernetes-multi-container-manifest-3b
    type: manifest
    flags:
      - deploy-kubernetes-multi-container
    steps:
      - IN: deploy-kubernetes-multi-container-nginx-image

  - name: dkmc-deploy-3a
    type: deploy
    flags:
      - deploy-kubernetes-multi-container
    steps:
      - IN: deploy-kubernetes-multi-container-manifest-3a
      - IN: mc-kube-cluster

  - name: dkmc-deploy-3b
    type: deploy
    flags:
      - deploy-kubernetes-multi-container
    steps:
      - IN: deploy-kubernetes-multi-container-manifest-3b
      - IN: mc-kube-cluster
